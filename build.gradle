plugins {
    id 'java'
}

group 'TestAutomation'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    test {
        java {
            srcDir 'src/java/test/'
        }
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.14.0'
    testCompile 'org.apache.logging.log4j:log4j-api:2.12.1'
    testCompile 'org.apache.logging.log4j:log4j-core:2.12.1'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '6.1.0.jre8'
    compile group: 'org.json', name: 'json', version: '20190722'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '4.1.2'
    testImplementation group: 'io.rest-assured', name: 'json-path:4.1.2'
    testImplementation 'io.rest-assured:json-schema-validator:4.1.2'

}

tasks.withType(Test) {
    if (project.hasProperty("browser")) {
        systemProperties["browser"] = project.properties["browser"]
    }
    useJUnit(){

    }
    testLogging.exceptionFormat = "full"
    testLogging {
        displayGranularity 1
        showStandardStreams = true
        events "passed", "failed", "standardOut"
    }
    test.outputs.upToDateWhen {false}
}


task fullRegression(type: Test){
    include '/all/*'
}

task web(type: Test){
    include '/all/web/*'
}

task rest(type: Test){
    include '/all/rest/*'
}
